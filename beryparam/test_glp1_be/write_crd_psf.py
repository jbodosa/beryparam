from openmm.app import *
from openmm import *
from openmm.unit import *
import parmed as pmd

# Load PDB and force field
pdb = PDBFile('mol_water.pdb')
forcefield = app.ForceField('charmm36.xml')

# Create the system
system = forcefield.createSystem(
    pdb.topology,
    nonbondedMethod=app.PME,
    nonbondedCutoff=1.0*nanometer,
    constraints=app.HBonds
)

# Rename residues
for residue in pdb.topology.residues():
    if residue.name == 'HOH':  # Change 'HOH' to 'TIP3'
        residue.name = 'TIP3'
    elif residue.name == 'GLP':  # Handle specific cases like HIS
        residue.name = 'GLP1'  # Rename to CHARMM standard for protonated histidine
    elif residue.name == 'ION':  # Handle specific cases like HIS
        residue.name = 'CLA'  # Rename to CHARMM standard for protonated histidine

# Rename atom names
##name, element, index, residue, id
for atom in pdb.topology.atoms():
    if atom.name == 'O':  # Change 'HOH' to 'TIP3'
        atom.name = 'OH2'
    elif atom.name == 'ION':  # Handle specific cases like HIS
        atom.name = 'CLA'  # Rename to CHARMM standard for protonated histidine

for atom in pdb.topology.atoms():
    if atom.residue.name == "TIP3":
        atom.residue.id ="TIP3"
    elif atom.residue.name == "GLP1":
        atom.residue.id ="GLP1"
    elif atom.residue.name == "BE":
        atom.residue.id ="BE"
    elif atom.residue.name == "CLA":
        atom.residue.id ="CLA"


output_path="output.crd"
if isinstance(pdb, PDBFile):
    with open(output_path, 'w') as crd_file:
        # Write the CRD file header
        crd_file.write(f"* CHARMM Coordinate File\n")
        crd_file.write(f"* Generated by sysgen\n")
        crd_file.write(f"*\n")
        # "NUMATOMS_EXT": "{0:10d} EXT\n",
        crd_file.write(f"{len(list(pdb.topology.atoms())):10d}  EXT\n")

        # Write the atomic data
        for i, atom in enumerate(pdb.topology.atoms()):
            position = pdb.positions[i]
            #segid = getattr(atom.residue, 'id', 'MGLYOL')

            # Picked the format from MDAnalysis
            # https://docs.mdanalysis.org/1.1.0/_modules/MDAnalysis/coordinates/CRD.html#CRDWriter
            #
            # "ATOM_EXT": ("{serial:10d}{totRes:10d}  {resname:<8.8s}  {name:<8.8s}"
            # "{pos[0]:20.10f}{pos[1]:20.10f}{pos[2]:20.10f}  "
            # "{chainID:<8.8s}  {resSeq:<8d}{tempfactor:20.10f}\n"),
            #
            # The resname and segname are wrong
            crd_file.write(f"{i + 1:10d}{atom.residue.index + 1:10d}  {atom.residue.name:<8.8s}  {atom.name:<8.8s}{position.x:>20.10f}{position.y:20.10f}{position.z:20.10f}  {atom.residue.id:<8.8s}  {atom.residue.index + 1:<8d}{0:20.10f}\n")
crd_file.close()

## Write CHARMM CRD file
#structure.save('output.crd', format='charmmcrd')

