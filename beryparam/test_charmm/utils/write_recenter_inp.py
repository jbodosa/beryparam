import os
from datetime import datetime, timezone
import logging


logger = logging.getLogger(__name__)

ION_LIST = ["SOD", "POT", "CAL","CLA"]
#####################
# CHARMM inp files #
#####################

### Writing a CHARMM input file
### Write the mol recenter script
def write_recenter_inp(crd_infile, crd_outfile, mol_segid_list, mol_n_list):
    output_file = "recenter.inp"

    with open(output_file, 'w') as inp:
        # Get username
        user = os.getenv('USERNAME') or os.getenv('USER')
        # Get current UTC date and time
        current_utc = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M")

        inp.write(f"* GENERATED BY SYSGEN\n")
        inp.write(f"* THIS IS TO RECENTER THE SYS AND GET CHARMM COMPATIBLE PDB\n")
        inp.write(f"* Made by {user} on {current_utc}\n")
        inp.write(f"* \n")
        inp.write(f"\n")
        inp.write(f"DIMENS CHSIZE 2000000\n")
        #        inp.write(f"!DIMENS CHSIZE 5000000 MAXRES 3000000\n")
        inp.write(f"\n")
        inp.write(f"bomlev -3 \n")
        inp.write(f"\n")

        inp.write(f"! Read charmm ff files \n")
        inp.write(f"stream toppar.str \n")
        inp.write(f"\n")

        for mol_segid, mol_n in  zip(mol_segid_list, mol_n_list):
            if mol_segid not in ION_LIST:
                # If not ion
                inp.write(f"! read the sequence\n")
                inp.write(f"read sequence {mol_segid} {mol_n}\n")
                inp.write(f"generate {mol_segid}\n")
                inp.write(f"\n")
            else:
                # If it is ion
                inp.write(f"! read the sequence\n")
                inp.write(f"read sequence {mol_segid} {mol_n}\n")
                inp.write(f"generate {mol_segid} noangle nodihedral\n")
                inp.write(f"\n")


        inp.write("! Read the coordinates from the CRD file\n")
        inp.write(f"open read unit 30 card name {crd_infile}\n")
        inp.write("read coor card unit 30 \n")
        inp.write("close unit 30\n")
        inp.write("\n")

        inp.write("! Read and print coordinates\n")
        inp.write("COOR STAT \n")
        inp.write("\n")
        inp.write("! Shift coordinates to recenter at (0, 0, 0) \n")
        inp.write("COOR TRAN XDIR -?XAVE YDIR -?YAVE ZDIR -?ZAVE \n")
        inp.write("\n")

        inp.write("! Write the CHARMM-format CRD file\n")
        inp.write(f"open write unit 40 card name {crd_outfile}\n")
        inp.write("write coor card unit 40\n")
        inp.write("close unit 40\n")
        inp.write("\n")
        inp.write("stop")
        inp.close()
        logger.debug("Wrote recenter inp")
    return(f"Wrote recenter_inp for crd")

