import os
from datetime import datetime, timezone
import logging


logger = logging.getLogger(__name__)
# FIX cahneg inp to add approp counter ions
ION_LIST = ["SOD", "POT", "CAL","CLA"]
#####################################
# CHARMM inp file to write psf #
#####################################

### Writing a Packmol input file
### Write the mol psf script
def write_ions_inp(crd_infile, psf_infile, ion):
    output_file = "ions.inp"

    with open(output_file, 'w') as inp:
        # Get username
        user = os.getenv('USERNAME') or os.getenv('USER')
        # Get current UTC date and time
        current_utc = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M")

        inp.write(f"# GENERATED BY SYSGEN\n")
        inp.write(f"# THIS IS TO ADD NEUTRALIZING IONS TO SYS \n")
        inp.write(f"# Made by {user} on {current_utc}\n")
        inp.write(f"# \n")
        inp.write(f"\n")
        inp.write(f"tolerance 2.0\n")
        inp.write(f"\n")
        inp.write(f"filetype pdb\n")
        inp.write(f"resnumbers 0\n")
        inp.write(f"\n")
        inp.write(f"structure recenter.pdb\n")
        inp.write(f"    number 1\n")
        inp.write(f"    inside box -3.00 -3.00 -3.00 3.00 3.00 3.00\n")
        inp.write(f"end structure \n")
        inp.write(f"\n")
        inp.write(f"structure {ion}.pdb\n")
        inp.write(f"    number {ion_num}\n")
        inp.write(f"    outside sphere 0.00 0.00 0.00 20.00 \n")
        inp.write(f"    inside box -30.00 -30.00 -30.00 30.00 30.00 30.00\n")
        inp.write(f"end structure \n")
        inp.write(f"\n")
        inp.write(f"output sys_ion.pdb\n")

        inp.close()
        logger.debug("Wrote ions inp")
    return(f"Wrote inp for ions")

