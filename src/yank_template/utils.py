### Util scripts

# Imports
#
import os
import subprocess
from datetime import datetime, timezone


### Writing a CHARMM input file

### Write the mol recenter script
def write_recenter_inp():
    output_file = "recenter.inp"

    with open(output_file, 'w') as inp:
        # Get username
        user = os.getenv('USERNAME') or os.getenv('USER')
        # Get current UTC date and time
        current_utc = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M")

        inp.write(f"* GENERATED BY SYSGEN\n")
        inp.write(f"* THIS IS TO RECENTER THE SYS AND GET CHARMM COMPATIBLE PDB/PSF/CRD\n")
        #        inp.write(f"* Made by {user} on {current_utc}\n")
        inp.write(f"* \n")
        inp.write(f"\n")
        inp.write(f"DIMENS CHSIZE 2000000\n")
        inp.write(f"!DIMENS CHSIZE 5000000 MAXRES 3000000\n")
        inp.write(f"\n")
        inp.write(f"bomlev -3 \n")
        inp.write(f"\n")
        inp.write(f"! Read charmm ff files \n")
        inp.write(f"stream toppar.str \n")
        inp.write(f"\n")
        inp.write(f"! Read in the mol/sys \n")
        inp.write(f"read sequence MGLYOL 1 \n")
        inp.write(f"generate MGLYOL \n")
        inp.write(f"\n")
        inp.write(f"open read unit 90 card name output.crd \n")
        inp.write(f"read coor unit 90 card resid \n")
        inp.write(f"close unit 90\n")
        inp.write(f"\n")
        inp.write(f"define solute sele segid MGLYOL end \n")
        inp.write(f"define SYS sele solute .and. ( .not. hydrogen ) end\n")
        inp.write(f"cons harm absolute force 1.0 sele SYS end \n")
        inp.write(f"\n")
        inp.write(f"COOR STAT\n")
        inp.write(f"COOR TRANSLATE XDIR -?XAVE YDIR -?YAVE ZDIR -?ZAVE\n")
        inp.write(f"\n")
        inp.write(f"open write unit 91 card name recenter.psf \n")
        inp.write(f"write psf card unit 91  \n")
        inp.write(f"close unit 91\n")
        inp.write(f"\n")
        inp.write(f"open write unit 92 card name recenter.crd \n")
        inp.write(f"write coor card unit 92  \n")
        inp.write(f"close unit 92\n")
        inp.write(f"\n")
        inp.write(f"open write unit 93 card name recenter_off.pdb \n")
        inp.write(f"write coor pdb card unit 93 official \n")
        inp.write(f"close unit 93\n")
        inp.write(f"\n")
        inp.write(f"open write unit 93 card name recenter.pdb \n")
        inp.write(f"write coor pdb card unit 93  \n")
        inp.write(f"close unit 93\n")
        inp.write(f"\n")
        inp.write(f"calc cgtot = int ( ?cgtot )\n")
        inp.write(f"open write unit 94 card name sys_param.str\n")
        inp.write(f"write title unit 94\n")
        inp.write(f"* set ncharge = @cgtot ! not ?cgtot\n")
        inp.write(f"*\n")
        inp.write(f"\n")
        inp.write(f"STOP\n")
        inp.close()
    return(f"Recentered and wrote psf/pdb/crd")

## Usage:
#write_recenter_inp()

