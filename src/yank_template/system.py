
# Imports
import os
from pathlib import Path
import subprocess
import shutil
import logging

from openmm.app import *

from parse_param import *


####################
####################
# System (class) #
####################
####################

logger = logging.getLogger(__name__)

class System:
    def __init__(self):
        """
            System class which has all the attributes.
        """
        #logger = logging.getLogger(__name__)
        logger.info("Set attributes of system.")
        # Default attributes
        #
        # Coordinate files
        self.pdb = None
        self.crd = None
        # Connectivity files
        self.psf = None

        # Can be defined in sys_param
        self.positive_ion = None
        self.negative_ion = None
        self.net_charge = 0
        self.forcefield = None

    ###########################
    # Add custom params to system #
    ###########################

        try:
            param_dict = parse_param("sys_param.str")
            for key, value in param_dict.items():
                setattr(self, key, value)
            logger.info(param_dict)
        except Exception as e:
            logger.info(f"{e}")

    ###############
    ###############
    #   READERS     #
    ###############
    ###############

    # Read the PDB file generated by any software
    def read_pdb(self, pdb_file):
        """
        Set the pdb attr to the pdb file.
        """
        pdb = Path(pdb_file)
        if pdb.exists():
            self.pdb = pdb
            logger.info("Loaded pdb.")
        else:
            logger.info("PDB file does not exist.")

