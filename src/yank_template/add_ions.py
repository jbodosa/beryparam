#!/usr/bin/env python3
#

## Is the molecule/system neutral ?
# If not then add ions
# Else exit with simple no
## Run packmol script to add ions
#First check the charge of molecule/system
# Run in subprocess $PACKMOL <ion_box.inp >ion_box.out


#```
#    Check the syscharge file in the structre dir. If neutral molecule then don't add charge else check if positive
#    or negative and add correct counter ion (CLA/POT) or ask for counter-ion name.
#```

# Imports
import os
import subprocess
from openmm.app import *
# Read the input file with charge
charge_file = "../meso/syscharge.dat"

class System:
    def __init__(self, pdb_file, box_dim, box_dim_unit):
        """
            Read charge input file and output the charge.
            :param pdb_file: path to the pdb file
            :param box_dim: (a,b,c) tuple of box edges
            :param box_dim_unit: Angstrom or nanometer unit
        """
        self.pdb_file = pdb_file
        self.box_dim = box_dim
        self.box_dim_unit = box_dim_unit

    ### Module to read and output the charge from charge_path
    ##def get_charge(self):
    ##    try:
    ##        with open(self.file_path, 'r') as f:
    ##            charge=f.read()
    ##        return(charge)
    ##    except FileNotFoundError:
    ##        return("{file} does not exit.".format(file=self.file_path))
    ##    except Exception as e:
    ##        return("Got error : {str(e)}".format(e=e))

    # Read the PDB file generated by any software
    def read_pdb(self):
        """
          Read the pdb file into openmm.
        """
        try:
            pdb = PDBFile(self.pdb_file)
            return(pdb)
        except FileNotFoundError:
            return("{file} does not exist.".format(file=self.pdb_file))
        except Exception as e:
            return("Got error : {str(e)}".format(e=e))

    def write_crd(self):
        """
            Read the pdb file and write out the crd file.
        """
        try:
            pdb = self.read_pdb()

        except Exception as e:
            raise e



